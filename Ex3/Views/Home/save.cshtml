
@{
    ViewBag.Title = "save";
}


<canvas id="myCanvas" style="position:absolute"></canvas>
<script>

        myCanvas.setAttribute('width', window.innerWidth)
        myCanvas.setAttribute('height', window.innerHeight)
        var dimension = [document.documentElement.clientWidth, document.documentElement.clientHeight];
        var can = document.getElementById("myCanvas");
        can.width = dimension[0];
        can.height = dimension[1];
        var ctx = can.getContext("2d");

        var prevLon=null;
        var prevLat=null;


         /**
         * the function draw point on the canvas
         * param lon x
         * param lat y
         */
        function drawPoint(lon, lat) {
            ctx.beginPath();
            ctx.arc(lon, lat, 5, 5, 10 * Math.PI);
            ctx.fillStyle = "Red";
            ctx.fill();
        }

        /**
         * the function draw line from the old lon lat to new
         * lon lat values
         * newlon val
         * newlat val
         */
        function drawLine(newlon, newlat) {
            ctx.beginPath();
            ctx.moveTo(prevLon, prevLat);
            ctx.lineTo(newlon, newlat);
            ctx.strokeStyle = "#FF0000";
            ctx.stroke();
        }

        /**
         * the main function =
         * set the time interval
         * if bigger than 0 - call mytimer with time intervl - repeat the function for x time
         * else call my timer once.
         * */
        function main() {
            var IntervalTime = @ViewBag.time;
            IntervalTime = 1000 * IntervalTime;
            /**
             * get the lon and lat val from the xml and draw point and line
             */
            myTimer = (function () {
                $.post("@Url.Action("RouteSaver")").done(function (xml) {
                    var xmlDoc = $.parseXML(xml);
                    $xml = $(xmlDoc);
                    lon = $xml.find("Lon").text();
                    lat = $xml.find("Lat").text();
                    var newlon = Math.abs((can.width / 360) * (parseFloat(lon) + 180));
                    var newlat = Math.abs((can.height / 180) * (parseFloat(lat) - 90));
                    if (prevLat == null || prevLon == null) {
                        drawPoint(newlon, newlat);
                    }
                    else {
                        drawLine(newlon, newlat);
                    }
                    prevLon = newlon;
                    prevLat = newlat;
                });
            });
            setInterval(myTimer, IntervalTime);
            myTimer();
            }

            main();
</script>
</>


